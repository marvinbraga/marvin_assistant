version: "3.9"

services:
  wait_services:
    image: jwilder/dockerize
    command: dockerize -wait tcp://postgres:5432 -wait tcp://redis:6379
    depends_on:
      - postgres
      - redis

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  postgres:
    build:
      context: .
      dockerfile: ./.docker/postgres/Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - database-data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  svc_chat_api:
    build:
      context: .
      dockerfile: ./.docker/services/chat_api/Dockerfile
    expose:
      - "5000"
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - wait_services

  svc_llm_api:
    build:
      context: .
      dockerfile: ./.docker/services/llm_api/Dockerfile
    expose:
      - "8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - wait_services
  
  front_pygame:
    build:
      context: .
      dockerfile: ./.docker/frontend/Dockerfile
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVEN_LABS_API_KEY=${ELEVEN_LABS_API_KEY}
      - CHAT_HOST=${CHAT_HOST}
      - CHAT_PORT=${CHAT_PORT}
    depends_on:
      - svc_chat_api
      - svc_llm_api

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5051:5051"
    restart: always
    volumes:
      - pgadmin:/root/.pgadmin

volumes:
  pgadmin:
  database-data:
  redis_data:
